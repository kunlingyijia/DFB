//
//  PersonalCenterController.m
//  DWduifubao
//
//  Created by 月美 刘 on 16/10/11.
//  Copyright © 2016年 bianming. All rights reserved.
//

#import "PersonalCenterController.h"
#import "PersonalCell1.h"
#import "PersonalCell2.h"
#import "UpdateSexController.h"
#import "RealNameCertificationController.h"
#import "AddressManageController.h"
#import "ImproveTicketController.h"
#import "SecurityCertificateController.h"
#import "PersonModel.h"
#import "ChageNameController.h"
#import "PersonChangeModel.h"
@interface PersonalCenterController ()<UITableViewDataSource, UITableViewDelegate,UpdateSexControllerDelegate,ChageNameControllerDelegate,UIActionSheetDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSArray *dataSource;
@end

@implementation PersonalCenterController

//视图即将加入窗口时调用
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:animated];
    self.tableView.scrollsToTop= YES;

    
}

//视图即将消失、被覆盖或是隐藏时调用
-(void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self.navigationController setNavigationBarHidden:NO animated:animated];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    

    // 设置导航框是否透明
    self.navigationController.navigationBar.alpha = 0;
    self.view.backgroundColor = [UIColor colorWithHexString:kViewBackgroundColor];
    
    self.dataSource = @[@[@"用户名",@"昵称",@"兑富宝号",@"会员等级",@"性别"],@[@"实名认证",@"地址管理",@"增票资质"],@[@"安全认证"]];
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, -20, Width, 650)];
    self.tableView.backgroundColor = [UIColor colorWithHexString:kViewBackgroundColor];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    
    UIView *headerV = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 160)];
    
    //红色背景图
    UIImageView *redBgPicture = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"图层-2"]];
    redBgPicture.frame = CGRectMake(0, 0, self.view.frame.size.width, 160);
    //设置可交互
    redBgPicture.userInteractionEnabled = YES;
    //返回箭头
    UIButton *backBtn = [[UIButton alloc] initWithFrame:CGRectMake(20, 30, 25, 25)];
    backBtn.imageView.contentMode = UIViewContentModeScaleAspectFit;
    [backBtn setImage:[UIImage imageNamed:@"夺宝-箭头-左"] forState:UIControlStateNormal];
    [backBtn addTarget:self action:@selector(backBtnAction:) forControlEvents:UIControlEventTouchUpInside];
    //个人中心
    UILabel *personalCenter = [[UILabel alloc] initWithFrame:CGRectMake(self.view.frame.size.width/2-40, 30, 80, 25)];
    personalCenter.text = @"个人中心";
    personalCenter.textColor = [UIColor whiteColor];
    personalCenter.textAlignment = NSTextAlignmentCenter;
    personalCenter.font = [UIFont systemFontOfSize:kFirstTitleFont];
    UITapGestureRecognizer *userPhotoTap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(userPhotoTap:)];
    
    //头像照片
    UIImageView *userPhotoPicture = [[UIImageView alloc] init];
    
    userPhotoPicture.frame = CGRectMake(self.view.frame.size.width/2-40, 70, 80, 80);
    userPhotoPicture.tag = 20001;
    userPhotoPicture.layer.cornerRadius = 40;
    userPhotoPicture.layer.masksToBounds = YES;
    [userPhotoPicture addGestureRecognizer:userPhotoTap];
    userPhotoPicture.userInteractionEnabled = YES;
    [userPhotoPicture sd_setImageWithURL:[NSURL URLWithString:self.personModel.avatar_url] placeholderImage:[UIImage imageNamed:@"我的－头像"]];
    
    //为TableView添加HeaderView
    [redBgPicture addSubview:backBtn];
    [redBgPicture addSubview:personalCenter];
    [redBgPicture addSubview:userPhotoPicture];
    [headerV addSubview:redBgPicture];
    self.tableView.tableHeaderView = headerV;
    
    //设置TableView自定义Cell的样式
    [self.tableView registerNib:[UINib nibWithNibName:@"PersonalCell1" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"PersonalCell1"];
    [self.tableView registerNib:[UINib nibWithNibName:@"PersonalCell2" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"PersonalCell2"];
    
    //设置TableViewCell的高度
    self.tableView.rowHeight = 50;
    
    //设置TableView的脚视图
    UIView *footV = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Width, 65)];
    footV.backgroundColor = [UIColor clearColor];
    self.tableView.tableFooterView = footV;
    
    //设置TableView可滑动的高度
    if (self.tableView.frame.size.height > Height) {
        self.tableView.scrollEnabled = YES;
    }else {
        self.tableView.scrollEnabled = NO;
    }
    [self.view addSubview:self.tableView];
    
}
//头像点击事件
-(void)userPhotoTap:(UITapGestureRecognizer*)sender{
    [self addImageOFaddressPerson];
    
}
//"返回"的按钮事件
- (void)backBtnAction:(UIButton *)button {
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - UITableViewDataSource
//设置分区的个数
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.dataSource.count;
}

//设置每个分区的cell个数
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    NSArray *arr = self.dataSource[section];
    return arr.count;
}

//设置cell的样式
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        //"用户名"
        if (indexPath.row == 0) {
            PersonalCell1 *cell1 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell1" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell1.selectionStyle = UITableViewCellSelectionStyleNone;
            cell1.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            cell1.cellInfo.text = self.personModel.mobile;
            cell1.cellInfo.textColor = [UIColor colorWithHexString:kRedColor];
            return cell1;
        }
        //"昵称"
        if (indexPath.row == 1) {
            PersonalCell1 *cell1 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell1" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell1.selectionStyle = UITableViewCellSelectionStyleNone;
            cell1.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            cell1.cellInfo.tag = 11112;
            cell1.cellInfo.text = self.personModel.nick_name;
            return cell1;
        }
        //"兑富宝号"
        if (indexPath.row == 2) {
            PersonalCell1 *cell1 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell1" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell1.selectionStyle = UITableViewCellSelectionStyleNone;
            cell1.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            cell1.cellInfo.text = [NSString stringWithFormat:@"%ld",self.personModel.inviter_code];
            return cell1;
        }
        //"会员等级"
        if (indexPath.row == 3) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            if (self.personModel.user_type==1) {
                cell2.cellInfo.text = @"注册会员";
            }else if (self.personModel.user_type==2){
                cell2.cellInfo.text = @"创业会员";
            }else{
                cell2.cellInfo.text = @"";
            }
            
            return cell2;
        }
        //"性别"
        if (indexPath.row == 4) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            cell2.cellInfo.tag = 11111;
            if (self.personModel.gender==1) {
                cell2.cellInfo.text = @"男";
            }else if (self.personModel.gender==2){
                cell2.cellInfo.text = @"女";

            }else if (self.personModel.gender==3){
                cell2.cellInfo.text = @"保密";

            }else{
                cell2.cellInfo.text = @"";

            }

            return cell2;
        }
    }
    
    if (indexPath.section == 1) {
        //"实名认证"
        if (indexPath.row == 0) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            return cell2;
        }
        //"地址管理"
        if (indexPath.row == 1) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            return cell2;
        }
        //"增票资质"
        if (indexPath.row == 2) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            return cell2;
        }
    }
    
    //"安全认证"
    if (indexPath.section == 2) {
        if (indexPath.row == 0) {
            PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
            //设置点击tableViewCell不会变成灰色
            cell2.selectionStyle = UITableViewCellSelectionStyleNone;
            cell2.cellName.text = self.dataSource[indexPath.section][indexPath.row];
            return cell2;
        }
    }

    PersonalCell2 *cell2 = [tableView dequeueReusableCellWithIdentifier:@"PersonalCell2" forIndexPath:indexPath];
    return cell2;
}

#pragma mark - UITableViewDelegate
//每个分区分区头的高度
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.01;
}

//每个分区分区脚的高度
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 2) {
        return 0;
    }
    return 10;
}

//每个cell的点击事件
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        //"修改昵称"
        if (indexPath.row == 1) {
            ChageNameController * CNC = [[ChageNameController alloc]initWithNibName:@"ChageNameController" bundle:nil];
            CNC.nick_name = self.personModel.nick_name;
            CNC.delegate = self;
            
            [self.navigationController pushViewController:CNC animated:YES];
        }
        //"会员等级"
        if (indexPath.row == 3) {
            
        }
        
        //"性别"
        if (indexPath.row == 4) {
            UpdateSexController *updateSexController = [[UpdateSexController alloc] initWithNibName:@"UpdateSexController" bundle:nil];
            updateSexController.delegate = self;

            if (self.personModel.gender==1) {
                 updateSexController.gender = @"男";
            }else if (self.personModel.gender==2){
               updateSexController.gender = @"女";
                
            }else if (self.personModel.gender==3){
               updateSexController.gender = @"保密";
                
            }else{
                updateSexController.gender = @"";
                
            }

            [self.navigationController pushViewController:updateSexController animated:YES];
        }
    }
    
    if (indexPath.section == 1) {
        //"实名认证"
        if (indexPath.row == 0) {
            RealNameCertificationController *realNameCertification = [[RealNameCertificationController alloc] initWithNibName:@"RealNameCertificationController" bundle:nil];
            [self.navigationController pushViewController:realNameCertification animated:YES];
        }
        
        //"地址管理"
        if (indexPath.row == 1) {
            AddressManageController *addressManageController = [[AddressManageController alloc] init];
            [self.navigationController pushViewController:addressManageController animated:YES];
        }
        
        //"增票资质"
        if (indexPath.row == 2) {
            ImproveTicketController *improveTicketController = [[ImproveTicketController alloc] init];
            [self.navigationController pushViewController:improveTicketController animated:YES];
        }
    }
    
    if (indexPath.section == 2) {
        //"安全认证"
        if (indexPath.row == 0) {
            SecurityCertificateController *securityCertificateController = [[SecurityCertificateController alloc] initWithNibName:@"SecurityCertificateController" bundle:nil];
            [self.navigationController pushViewController:securityCertificateController animated:YES];
        }
    }
}
//代理方法
-(void)changesex:(int)inter{
    UILabel * genterLabel = [self.view viewWithTag:11111];
    if (inter==1) {
        genterLabel.text = @"男";
    }else if (inter==2){
        genterLabel.text = @"女";
        
    }else if (inter==3){
        genterLabel.text= @"保密";
        
    }else{
        genterLabel.text = @"";
        
    }

}
-(void)changenick_name:(NSString *)nick_name{
    UILabel * genterLabel = [self.view viewWithTag:11112];
    NSLog(@"%@",nick_name);
    genterLabel.text = nick_name;
}
#pragma mark--拍摄照片上传图像
//拍摄照片上传图像
-(void)addImageOFaddressPerson{
    
    //提供相册 以及拍照两种读取图片的方式
    
    //创建
    
    UIActionSheet *sheet = [[UIActionSheet alloc]initWithTitle:@"获取图片" delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:@"相册" otherButtonTitles:@"拍照", nil];
    
    
    [sheet showInView:self.view];
    
    
    
    
}

#pragma mark-----UIActionSheetDelegate

-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex{
    
    switch (buttonIndex) {
        case 0:
            //从相册中去读取
            [self readImageFromAlbum];
            
            break;
            
        case 1:
            //拍照
            [self readImageFromCamera];
            
            break;
            
            
        default:
            break;
    }
    
}

//从相册中读取照片
- (void)readImageFromAlbum {
    UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];//创建对象
    imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;//（选择类型）表示仅仅从相册中选取照片
    imagePicker.delegate = self;//指定代理，因此我们要实现UIImagePickerControllerDelegate,  UINavigationControllerDelegate协议
    imagePicker.allowsEditing = YES;//设置在相册选完照片后，是否跳到编辑模式进行图片剪裁。(允许用户编辑)
    [self presentViewController:imagePicker animated:YES completion:nil];//显示相册
}
//拍照
- (void)readImageFromCamera {
    //判断选择的模式是否为相机模式，如果没有弹窗警告
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
        UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
        imagePicker.allowsEditing = YES;//允许编辑
        imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        imagePicker.delegate = self;
        [self presentViewController:imagePicker animated:YES completion:nil];
    } else {
        //弹出窗口响应点击事件
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"警告" message:@"未检测到摄像头" delegate:nil cancelButtonTitle:nil otherButtonTitles:@"确定", nil];//警告。。确认按钮
        [alert show];
    }
}
#pragma mark --- UIImagePickerControllerDelegate
////图片编辑完成之后触发, 显示图片在button上
//- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo {
//    //参数image 就是最终选择的图片
//    //图片上传请求
//    
//    [self imageRequestAction:image];
//    
//    [self dismissViewControllerAnimated:YES completion:nil];
//}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info {
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image = [info objectForKey:UIImagePickerControllerOriginalImage];
    [self imageRequestAction:image];
}

#pragma mark ---    //图片上传请求
//图片上传请求

-(void)imageRequestAction:(UIImage*)image{
    NSString *password = [NSString stringWithFormat:@"%@%@%@",[AuthenticationModel getimage_account],[AuthenticationModel getimage_hostname],[AuthenticationModel getimage_password]];
    NSLog(@"%@",password);
    NSDictionary * dic = @{@"image_account":[AuthenticationModel getimage_account],@"image_password":[password MD5Hash]};
    __weak typeof(self) weakself = self;

    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];
     manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:@"text/html"];
    [manager POST:[AuthenticationModel getimage_hostname] parameters:[dic yy_modelToJSONObject] constructingBodyWithBlock:^(id<AFMultipartFormData>  _Nonnull formData) {
        //1.把图片转换成二进制流
        NSData *imageData = UIImageJPEGRepresentation(image, 0.5);
        //2.上传图片
        [formData appendPartWithFileData:imageData name:@"file" fileName:@"img.jpg" mimeType:@"jpg"];
    } progress:^(NSProgress * _Nonnull uploadProgress) {
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSArray *arr =responseObject[@"data"];
        
       // NSLog(@"上图%@",responseObject);
        for (NSDictionary *dic in arr) {
            NSLog(@"%@",dic[@"url"]);
             [weakself requestAction:dic[@"url"]];
        }
       
        UIImageView * imageView = [weakself.view viewWithTag:20001];
        imageView.image = image;

    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [self hideProgress];
    }];
    
    
}

-(void)requestAction:(NSString*)Url{
    
    //控件赋值
    NSString *Token =[AuthenticationModel getLoginToken];
    PersonChangeModel * model = [[PersonChangeModel alloc ]init ];
    model.avatar_url = Url;
    __weak typeof(self) weakself = self;
    if (Token.length!= 0) {
        BaseRequest *baseReq = [[BaseRequest alloc] init];
        baseReq.token = [AuthenticationModel getLoginToken];
        baseReq.encryptionType = AES;
        baseReq.data = [AESCrypt encrypt:[model yy_modelToJSONString] password:[AuthenticationModel getLoginKey]];
        [[DWHelper shareHelper] requestDataWithParm:[baseReq yy_modelToJSONString] act:@"act=Api/User/requestUpdateUserInfo" sign:[baseReq.data MD5Hash] requestMethod:GET success:^(id response) {
            
            //NSLog(@"-------------%@",nick_name);
            //if ([weakself.delegate respondsToSelector:@selector(changenick_name:)]) {
               // [weakself.delegate changenick_name:nick_name];
            //}
            //[weakself showToast:@"修改成功"];
           // [weakself.navigationController popViewControllerAnimated:YES];
            
            
            
        } faild:^(id error) {
            NSLog(@"%@", error);
            
        }];
        
    }else {
        [weakself showToast:@"请登录后修改"];
        //[weakself.navigationController popViewControllerAnimated:YES];
    }
    
}

@end
